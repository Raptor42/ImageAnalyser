import java.io.File;
import java.io.IOException;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

public class ImageAnalyser {
	public static int getA(BufferedImage image, int x, int y) {
		int rgb = image.getRGB(x,y);
		int a = (rgb>>24) & 0xff;
		return a;
	}

	public static int getR(BufferedImage image, int x, int y) {
		int rgb = image.getRGB(x,y);
		int r = (rgb>>16) & 0xff;
		return r;
	}

	public static int getG(BufferedImage image, int x, int y) {
		int rgb = image.getRGB(x,y);
		int g = (rgb>>8) & 0xff;
		return g;
	}

	public static int getB(BufferedImage image, int x, int y) {
		int rgb = image.getRGB(x,y);
		int b  = rgb & 0xff;
		return b;
	}

	public static BufferedImage readImage(String fn) {
		BufferedImage image = null;
		try {
			File file = new File(fn);
			image = ImageIO.read(file);
		} catch(IOException ioE) {
      		System.out.println(ioE);
    	}	
    	return image;
	}

	public static void writeImage(String fn, BufferedImage image) {
		try {
			File file = new File(fn);
			ImageIO.write(image, "jpg", file);
		} catch(IOException ioE) {
      		System.out.println(ioE);
    	}
	}

	public static BufferedImage toGreyscale(BufferedImage image) {
		int width = image.getWidth();
    	int height = image.getHeight();

    	for(int y = 0; y < height; y++){
      		for(int x = 0; x < width; x++){
        		int a = getA(image, x, y);
        		int r = getR(image, x, y);
        		int g = getG(image, x, y);
        		int b = getB(image, x, y);

        		int avg = (r+g+b)/3;

        		int rgb = (a<<24) | (avg<<16) | (avg<<8) | avg;

        		image.setRGB(x, y, rgb);
      		}
   		}

   		return image;
	}

	public static  getPixel 

	public static void main(String[] args) {
		String inFN = args[0];
		String outFN = args[1];
		BufferedImage inImage = readImage(inFN);
		BufferedImage outImage = toGreyscale(inImage);
		writeImage(outFN, outImage);
	}
}